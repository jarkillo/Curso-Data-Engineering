# ===============================================
# PYPROJECT.TOML - Master en Ingeniería de Datos
# ===============================================

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "master-data-engineering"
version = "1.0.0"
description = "Master completo en Ingeniería de Datos"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Master Data Engineering", email = "master@dataengineering.com"}
]
keywords = ["data-engineering", "python", "etl", "data-pipeline"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# ===============================================
# BLACK - FORMATEO DE CÓDIGO
# ===============================================
[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directorios a excluir
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
  | htmlcov
  | \.cursor
  | \.claude
  | airflow/logs
  # Archivos del curso (material educativo, no código de producción)
  | modulo-01-fundamentos/.*
  | data_engineer_game\.py
  | game\.html
  | game_save\.json
)/
'''

# ===============================================
# ISORT - ORDENAR IMPORTS
# ===============================================
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = [
    "venv/*",
    ".venv/*",
    "__pycache__/*",
    "build/*",
    "dist/*",
    "*.egg-info/*",
    ".cursor/*",
    ".claude/*",
    "airflow/logs/*",
    "modulo-01-fundamentos/**/*",
    "data_engineer_game.py",
    "game.html",
    "game_save.json"
]

# ===============================================
# PYTEST - TESTING
# ===============================================
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--tb=short",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# ===============================================
# COVERAGE - COBERTURA DE TESTS
# ===============================================
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
    "*/.cursor/*",
    "*/.claude/*",
    "*/airflow/logs/*",
    "*/htmlcov/*",
    "setup.py",
    # Archivos del curso (material educativo)
    "*/modulo-01-fundamentos/*",
    "data_engineer_game.py",
    "game.html",
    "game_save.json"
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 0  # Temporalmente 0% hasta que haya código de producción
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# ===============================================
# MYPY - TYPE CHECKING
# ===============================================
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
no_implicit_optional = true
disallow_untyped_defs = false
disallow_any_generics = false
disallow_subclassing_any = false
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# ===============================================
# BANDIT - ANÁLISIS DE SEGURIDAD
# ===============================================
[tool.bandit]
targets = ["."]
exclude_dirs = [
    "tests",
    "venv",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    ".cursor",
    ".claude",
    "airflow/logs",
    "htmlcov",
    "modulo-01-fundamentos"
]
skips = [
    "B101",  # assert_used - permitido en tests
    "B601",  # paramiko_calls - usado en algunos módulos
]
# Niveles: LOW, MEDIUM, HIGH
severity = "MEDIUM"
confidence = "MEDIUM"

# ===============================================
# FLAKE8 - LINTING
# ===============================================
# Nota: flake8 no soporta pyproject.toml nativamente
# Esta configuración debe ir en .flake8 o setup.cfg
# Se incluye aquí como referencia
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    "*.egg-info",
    ".cursor",
    ".claude",
    "airflow/logs",
    "htmlcov"
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101,S105,S106"
]

# ===============================================
# PYLINT - LINTING AVANZADO
# ===============================================
[tool.pylint.main]
py-version = "3.13"
jobs = 0  # Usar todos los cores disponibles
fail-under = 8.0

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 7
max-attributes = 10
max-bool-expr = 5
max-branches = 15
max-locals = 20
max-parents = 7
max-public-methods = 25
max-returns = 6
max-statements = 50
min-public-methods = 1

# ===============================================
# SETUPTOOLS - PACKAGING
# ===============================================
[tool.setuptools]
packages = ["modulo-01-fundamentos", "scripts"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]
